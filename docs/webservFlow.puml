@startuml

start
:read config file && check syntax;
:set up epoll instance;
:setup sockets && add to epoll instance;
:instantiate virtualServers;
:initiate infinite loop with epoll_wait;
while(true) is (iterate through all flagged fds)
	if (fd is one of the sockets && EPOLLIN?) then (yes)
		:establish connection;
		:add new fd to epoll instance EPOLLIN;
		:associate a buffer to connection fd;
	(no) elseif (fd is connection && EPOLLIN?) then (yes)
		if (is there a Request object assoaciated with this fd?) then (no)
			:instantiate Request;
			:add association between fd and Request object;
		else (yes)
		endif
			group Parsing
			while (is parsed enough?) is (no)
				:continue parsing;
			endwhile (yes)
			end group
			:mod fd in epoll instance to EPOLLOUT;
	(no) elseif (fd is connection && EPOLLOUT?) then (yes)
		if (is there a Response object associated with this fd?) then (no)
			:based on Request associated with fd, instantiate Response object;
			:add association between Response object and fd;
		else (yes)
		endif
			group Constructing Response
			while (is response fully formed?) is (no)
				:continue filling object;
			endwhile (yes)
			end group
			:send response;
			:delete element from requestMap;
			:delete element from responseMap;
			if (connection to be kept alive?) then (yes)
				:mod fd in epoll instance to EPOLLIN;
			else (no)
				:close connection;
				:delete fd from epoll instance;
		endif
	endif
endwhile
end

@enduml
