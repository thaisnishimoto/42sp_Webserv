@startuml

Title WebServ - Classes Overview

WebServer *-- VirtualServer
WebServer *-- Request
WebServer *-- Response

class WebServer
{
	-int _epollFd;
	-std::set<uint16_t> _ports;
	-vector<VirtualServer> _virtualServers;
	-std::map<int, std::string> _connectionBuffers;
	-std::map<int, Request> _requestMap;
	-std::map<int, Response> _responseMap;
	-std::map<int, VirtualServer&> _targetVirtualServers;

	--

	+Webserver(void);
	+\~Webserver(void);
	+void init(void);
	+void run(void);

	-void setUpSockets(std::set<uint16_t> ports);
	-int acceptConnection(int epollFd);
}

class VirtualServer
{
	+std::string _name;
	+std::string _root;
	+bool isDefault;
	+allowed_methods;
	other things...
}

class	Request
{
	+std::string _requestLine;
	+std::map<std::string, std::string> _headerFields;
	+std::string _body;

	+std::string _method;
	+std::string _requestTarget;

	+bool _parsedRequestLine;
	+bool _parsedHeader;
	+bool _parsedBody;
}

class	Response
{
	+std::string _statusLine;
	+std::map<std::string, std::string> _headerFields;
	+std::string _body;

	+std::string _status;
	+std::string _reasonPhrase;
}

package "namespace Utils"
{
	object functions{
		str::string& trim(std::string& str);
		std::string getNextLineRN(std::string& buffer);
		std::string removeCRLF(std::string& fieldValue);
	}
}

@enduml
